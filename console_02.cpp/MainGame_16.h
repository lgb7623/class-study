#pragma once
#include<iostream>

using namespace std;



#pragma region 클래스
/*
▶ 클래스란?
- 속성에 해당하는 필드(변수)와 행위에 해당하는 메서드(함수)의 집합을 클래스라고 한다.
ㄴ 클래스를 이용하면 데이터 뿐만아니라 함수를 특정 집합에 포함하는게 가능하다.

▷ c/c++ 언어의 클래스 선언방법

class CUnit 
{

int m_ID;


void setinfo(int m_10, std:string m_Name);


};


- c/c++ 언어의 클래스는 접근제어 지시자를 이용해서 변수 또는 함수에 접근할 수 있는 영역을 제한하는것이 가능하다.


▷ class 접근 제어 지시자 종류

1. private
ㄴ 클래스에 포함된 함수에서만 접근이 가능하도록 허용

- 이속성을 가지는 멤버는 외부에서 엑세스 할 수 없으며 구조체의 멤버 함수만 엑세스 할 수 있다
외부에서는 private 멤버를 읽을 수 없음은 물론이고 존재 자체도 알려지지 않는다.


2. puvlic
ㄴ 어디서든 접근이 가능하도록 허용

- 이 속성을 가진 멤버는 외부로 공개되어 누구나 읽고 쓸 수 있으며 함수의 경우에는 호출도 가능
구조체가 자신의 속성이나 동작을 외부로 공개하는 수단이며 public 멤버를 소위 "Interface" 라고 한다.

3.protected
ㄴ 상속 관계에 있을때 자식 클래스에서 부모 클래스에 접근하도록 허용

-private와 마찬가지로 외부에서는 액세스 할 수 없으나 상속된 파생 클래스는 이 멤버를 엑세스 할 수 있다.

-private멤버는 파생 클래스에서 조차 참조 할 수 없으며 오로지 자신만이 이 멤버를 참조 할 수 있다는 점에서 명백히 다르다.


※ 클래스는 객체의 안전성을 위해 외부에서 함부로 값을 건드리지 못하도록 멤버를 숨기는 경향이 있다

반대로 구조체는 가급적이면 멤버를 공개하는 성향이 있다.

※ 구조체의 디폴트 엑세스 지정이 public 일수 밖에 없는 이유는 c언어와의 호환성 때문이다


★ 기술 면접 많이 묻는 질문

ㄴ 구조체와 클래스의 차이점? 접근제어 지시자의 차이 (구조체도 접근제어 지시자를 지원한다)

※ 클래스는 기본적으로 접근 제어 지시자를 명시하지 않으면 private으로 선언된다





*/
#pragma endregion


struct tagPlayer
{

	int hp;
	int mp;


};

class MainGame_16
{

private:
	int _Nuber; // 언더바들어가있을경우 클래스 멤버변수
	int _x;
	int _y; // 선언 하고 cpp에서 초기화 조작 하는이유(기본) 1. 유지보수에 유리, 선언값보려면 헤더왔다갔다 해야됨
	//tagPlayer _player[3] 구조체 가져옴

	// c++ 11부터 클래스의 멤버 변수의 선언과 동시에 초기화 시킬 수 있는 기능을 추가했다.
	// 별도로 멤버 이니셜라이저를 이용하지 않더라도 심볼릭 상수등을 초기화 하는것이 가능하다


	int m_mID = 0;  // 문법적으로 선언 초기화는 동시에 가능
	std::string m_ostring = "";
	// 구조체 또는 클래스에 멤버 변수로 선언된 심볼릭 상수는 반드시 별도의 초기화로직이 필요함
	const int m_mconstValue = 0;


	// 함수 선언
public:


	// 출력
	void outPut();
	// 위치 좌표
	void showposition(void);
	// 위치증가
	void moveposition(void);
	// 위치 좌표 세팅
	void setposition(int x, int y);

	// 생성자
     // 주로 멤버변수의 값을 원하는 값으로 대입하는 작업을 하지만 그외 객체가 동작하는데
	// 필요한 모든 초기화 처리를 담당시킬수 있다.
	MainGame_16();


	// 소멸자
	// ㄴ 객체가 바꿔 놓은환경을 원래대로 돌려 놓거나 항당한 자원을 회수하는 역할을 한다.
	// 동적할당을 했으면 메모리 해제를 이곳에서 해주어야함
	~MainGame_16();
};

